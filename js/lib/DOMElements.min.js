//Developed and created by Walid Bezoui
//Github: bezoui-software
//Mail: wbezoui@gmail.com

//Copyright 2020 - Walid Bezoui

//Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
//1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
//2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
//3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.

//BSD-3-Clause License:
//THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
//AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, 
//THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
//IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS 
//BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, 
//OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
//HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, 
//OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, 
//EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

"use strict";class DOMElements{constructor(){this.elements}set(e){this.elements=e}get(e){const t=this.elements[e];if(!t)throw new Error('"'+e+'" element not found.');return t}getEltOf(e){return this.get(e).elt}getInputOf(e){return this.get(e).input}valueOf(e){const t=this.getInputOf(e);if(!t)throw new Error(".valueOf() function work with inputs.");return t.value}render(){for(let e of Object.keys(this.elements)){const t=this.elements[e];document.body.appendChild(t.elt)}}generate(){for(let e of Object.keys(this.elements)){const t=this.elements[e];this.generateElt(t),this.generateClassList(t),this.generateEvents(t)}}generateElt(e){"input"==e.type?this.generateInputElt(e):this.generateDefaultElt(e),e.elt.id=e.id}generateEvents(e){if(e.events)for(let t of Object.keys(e.events))e.elt.addEventListener(t,e.events[t])}generateClassList(e){if(e.classList){const t=e.classList.split(" ");e.elt.classList.add(...t)}}generateInputElt(e){e.elt=document.createElement("div"),e.input=document.createElement("input");for(let t of Object.keys(e.inputOptions))e.input[t]=e.inputOptions[t];e.label=document.createElement("label"),e.label.innerText=e.text,e.elt.appendChild(e.label),e.elt.appendChild(e.input)}generateDefaultElt(e){e.elt=document.createElement(e.type),e.elt.innerText=e.text}}